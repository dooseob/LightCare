<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.carelink.dao.FacilityMapper">

    <resultMap id="facilityResultMap" type="com.example.carelink.dto.FacilityDTO">
        <id property="facilityId" column="facility_id"/>
        <result property="facilityName" column="facility_name"/>
        <result property="facilityType" column="facility_type"/>
        <result property="address" column="address"/>
        <result property="detailAddress" column="detail_address"/>
        <result property="phone" column="phone"/>
        <result property="latitude" column="latitude"/>
        <result property="longitude" column="longitude"/>
        <result property="description" column="description"/>
        <result property="facilityImage" column="facility_image"/>
        <result property="facilityImageAltText" column="facility_image_alt_text"/>
        <result property="homepage" column="homepage"/>
        <result property="capacity" column="capacity"/>
        <result property="currentOccupancy" column="current_occupancy"/>
        <result property="operatingHours" column="operating_hours"/>
        <result property="features" column="features"/>
        <result property="averageRating" column="average_rating"/>
        <result property="reviewCount" column="review_count"/>
        <result property="gradeRating" column="grade_rating"/>
        <result property="registeredMemberId" column="registered_member_id"/>
        <result property="registeredMemberName" column="registered_member_name"/>

        <result property="isApproved" column="is_approved"/>
        <result property="approvalStatus" column="approval_status"/>
    </resultMap>

    <select id="searchFacilities" resultMap="facilityResultMap">
        SELECT f.*, m.name as registered_member_name
        FROM facility f
        LEFT JOIN member m ON f.registered_member_id = m.member_id
        <where>
            f.is_deleted = false
            AND f.is_approved = true
            <if test="facilityName != null and facilityName != ''">
                AND f.facility_name LIKE CONCAT('%', #{facilityName}, '%')
            </if>
            <if test="facilityType != null and facilityType != ''">
                AND f.facility_type = #{facilityType}
            </if>
            <if test="address != null and address != ''">
                AND f.address LIKE CONCAT(#{address}, '%')
            </if>

            <if test="swLat != null and swLng != null and neLat != null and neLng != null">
                AND (f.latitude BETWEEN #{swLat} AND #{neLat})
                AND (f.longitude BETWEEN #{swLng} AND #{neLng})
            </if>
        </where>
        ORDER BY f.created_at DESC
    </select>

    <select id="getFacilityById" resultType="com.example.carelink.dto.FacilityDTO">
        SELECT 
            f.facility_id,
            f.facility_name,
            f.facility_type,
            f.address,
            f.phone,
            f.latitude,
            f.longitude,
            f.description,
            f.facility_image,
            f.homepage,
            f.capacity,
            f.current_occupancy,
            f.operating_hours,
            f.features,
            f.average_rating,
            f.review_count,
            f.grade_rating,
            f.registered_member_id,
            m.name as registered_member_name,
            f.is_deleted,
            f.is_approved,
            CASE 
                WHEN f.is_deleted = true THEN '삭제됨'
                WHEN f.is_approved = false THEN '승인대기'
                ELSE '정상'
            END as status
        FROM facility f
        LEFT JOIN member m ON f.registered_member_id = m.member_id
        WHERE f.facility_id = #{facilityId}
    </select>

    <select id="getAllFacilities" resultMap="facilityResultMap">
        SELECT f.*, m.name as registered_member_name
        FROM facility f
        LEFT JOIN member m ON f.registered_member_id = m.member_id
        WHERE f.is_deleted = false
        AND f.is_approved = true
        ORDER BY f.created_at DESC
    </select>

    <insert id="insertFacility" parameterType="com.example.carelink.dto.FacilityDTO" useGeneratedKeys="true" keyProperty="facilityId">
        INSERT INTO facility (
            facility_name, facility_type, address, detail_address, phone,
            latitude, longitude, description, facility_image, facility_image_alt_text, homepage,
            capacity, current_occupancy, operating_hours, features,
            average_rating, review_count, registered_member_id,
            is_approved, approval_status
        ) VALUES (
                     #{facilityName}, #{facilityType}, #{address}, #{detailAddress}, #{phone},
                     #{latitude}, #{longitude}, #{description}, #{facilityImage}, #{facilityImageAltText}, #{homepage},
                     #{capacity}, #{currentOccupancy}, #{operatingHours}, #{features},
                     #{averageRating}, #{reviewCount}, #{registeredMemberId},
                     #{isApproved}, #{approvalStatus}
                 )
    </insert>

    <update id="updateFacility" parameterType="com.example.carelink.dto.FacilityDTO">
        UPDATE facility
        SET
            facility_name = #{facilityName},
            facility_type = #{facilityType},
            address = #{address},
            detail_address = #{detailAddress},
            phone = #{phone},
            latitude = #{latitude},
            longitude = #{longitude},
            description = #{description},
            facility_image = #{facilityImage},
            facility_image_alt_text = #{facilityImageAltText},
            homepage = #{homepage},
            capacity = #{capacity},
            current_occupancy = #{currentOccupancy},
            operating_hours = #{operatingHours},
            features = #{features},
            average_rating = #{averageRating},
            review_count = #{reviewCount},
            registered_member_id = #{registeredMemberId},
            is_approved = #{isApproved},
            approval_status = #{approvalStatus},
            updated_at = NOW()
        WHERE facility_id = #{facilityId}
    </update>

    <delete id="deleteFacility">
        DELETE FROM facility WHERE facility_id = #{facilityId}
    </delete>

    <select id="countFacilitiesByRegion" resultType="int">
        SELECT COUNT(*)
        FROM facility
        WHERE address LIKE CONCAT(#{region}, '%')
    </select>

    <!-- 전체 시설 수 조회 (통계용) -->
    <select id="getFacilityCount" resultType="int">
        SELECT COUNT(*) 
        FROM facility 
        WHERE is_deleted = false
        AND is_approved = true
    </select>

    <!-- 활성화된 모든 시설 목록 조회 (리뷰 작성용) -->
    <select id="getAllActiveFacilities" resultType="com.example.carelink.dto.FacilityDTO">
        SELECT 
            f.facility_id,
            f.facility_name,
            f.facility_type,
            f.address,
            f.phone,
            f.average_rating,
            f.review_count,
            f.registered_member_id,
            m.name as registered_member_name,
            f.is_deleted,
            f.is_approved,
            CASE 
                WHEN f.is_deleted = true THEN '삭제됨'
                WHEN f.is_approved = false THEN '승인대기'
                ELSE '정상'
            END as status
        FROM facility f
        LEFT JOIN member m ON f.registered_member_id = m.member_id
        WHERE f.is_deleted = false 
        AND f.is_approved = true
        ORDER BY f.facility_name ASC
    </select>

    <!-- 회원 ID로 시설 삭제 (회원 탈퇴 시 사용) -->
    <delete id="deleteByMemberId" parameterType="long">
        DELETE FROM facility WHERE registered_member_id = #{memberId}
    </delete>

    <!-- 회원 ID로 시설 목록 조회 -->
    <select id="getFacilitiesByMemberId" parameterType="long" resultType="FacilityDTO">
        SELECT 
            facility_id as facilityId,
            facility_name as facilityName,
            facility_type as facilityType,
            address,
            detail_address as detailAddress,
            phone,
            latitude,
            longitude,
            description,
            facility_image as facilityImage,
            homepage,
            capacity,
            current_occupancy as currentOccupancy,
            operating_hours as operatingHours,
            features,
            average_rating as averageRating,
            review_count as reviewCount,
            grade_rating as gradeRating,
            registered_member_id as registeredMemberId,
            is_approved as isApproved,
            approval_status as approvalStatus,
            created_at as createdAt,
            updated_at as updatedAt,
            is_deleted as isDeleted
        FROM facility
        WHERE registered_member_id = #{memberId} AND is_deleted = false
        ORDER BY created_at DESC
    </select>

    <!-- 회원 ID로 시설 조회 (첫 번째 시설만) -->
    <select id="getFacilityByMemberId" parameterType="long" resultType="FacilityDTO">
        SELECT 
            facility_id as facilityId,
            facility_name as facilityName,
            facility_type as facilityType,
            address,
            detail_address as detailAddress,
            phone,
            latitude,
            longitude,
            description,
            facility_image as facilityImage,
            homepage,
            capacity,
            current_occupancy as currentOccupancy,
            operating_hours as operatingHours,
            features,
            average_rating as averageRating,
            review_count as reviewCount,
            grade_rating as gradeRating,
            registered_member_id as registeredMemberId,
            is_approved as isApproved,
            approval_status as approvalStatus,
            created_at as createdAt,
            updated_at as updatedAt,
            is_deleted as isDeleted
        FROM facility
        WHERE registered_member_id = #{memberId} AND is_deleted = false
        ORDER BY created_at DESC
        LIMIT 1
    </select>

    <!-- ================== 관리자용 쿼리들 ================== -->
    
    <!-- 승인 상태별 시설 목록 조회 (관리자용) -->
    <select id="getFacilitiesByApprovalStatus" parameterType="string" resultType="FacilityDTO">
        SELECT 
            f.facility_id,
            f.facility_name,
            f.facility_type,
            f.address,
            f.detail_address,
            f.phone,
            f.description,
            f.homepage,
            f.capacity,
            f.operating_hours,
            f.features,
            f.facility_image,
            f.latitude,
            f.longitude,
            f.approval_status,
            f.registered_member_id,
            f.created_at,
            f.updated_at,
            m.user_id as registeredUserName,
            m.name as registeredMemberName
        FROM facility f
        LEFT JOIN member m ON f.registered_member_id = m.member_id
        WHERE f.is_deleted = false
        <if test="approvalStatus != null and approvalStatus != ''">
            AND f.approval_status = #{approvalStatus}
        </if>
        ORDER BY f.created_at DESC
    </select>

    <!-- 시설 승인 상태 업데이트 (관리자용) -->
    <update id="updateFacilityApprovalStatus">
        UPDATE facility 
        SET 
            approval_status = #{approvalStatus},
            is_approved = (#{approvalStatus} = 'APPROVED'),
            <if test="rejectionReason != null">
            description = CONCAT(COALESCE(description, ''), CHAR(10), '거부사유: ', #{rejectionReason}),
            </if>
            updated_at = NOW()
        WHERE facility_id = #{facilityId}
    </update>

    <!-- 승인 상태별 시설 수 조회 (관리자용) -->
    <select id="countFacilitiesByStatus" parameterType="string" resultType="int">
        SELECT COUNT(*) 
        FROM facility 
        WHERE is_deleted = false 
        AND approval_status = #{approvalStatus}
    </select>
    
    <!-- 시설 메인 이미지 정보 업데이트 -->
    <update id="updateFacilityMainImage">
        UPDATE facility 
        SET 
            facility_image = #{mainImagePath},
            image_count = #{imageCount},
            updated_at = NOW()
        WHERE facility_id = #{facilityId}
    </update>

</mapper>

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.carelink.dao.JobMapper">

    <!-- ResultMap 정의 -->
    <resultMap id="jobResultMap" type="com.example.carelink.dto.JobDTO">
        <id property="jobId" column="job_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="jobType" column="job_type"/>
        <result property="workType" column="work_type"/>
        <result property="position" column="position"/>
        <result property="recruitCount" column="recruit_count"/>
        <result property="salaryType" column="salary_type"/>
        <result property="salaryMin" column="salary_min"/>
        <result property="salaryMax" column="salary_max"/>
        <result property="salaryDescription" column="salary_description"/>
        <result property="workLocation" column="work_location"/>
        <result property="workHours" column="work_hours"/>
        <result property="experience" column="experience"/>
        <result property="education" column="education"/>
        <result property="qualifications" column="qualifications"/>
        <result property="benefits" column="benefits"/>
        <result property="startDate" column="start_date"/>
        <result property="endDate" column="end_date"/>
        <result property="contactName" column="contact_name"/>
        <result property="contactPhone" column="contact_phone"/>
        <result property="contactEmail" column="contact_email"/>
        <result property="status" column="status"/>
        <result property="viewCount" column="view_count"/>
        <result property="applyCount" column="apply_count"/>
        <result property="memberId" column="member_id"/>
        <result property="memberName" column="member_name"/>
        <result property="facilityId" column="facility_id"/>
        <result property="facilityName" column="facility_name"/>
        <result property="attachmentPath" column="attachment_path"/>
        <result property="attachmentName" column="attachment_name"/>
        <result property="priority" column="priority"/>
        <result property="isHighlight" column="is_highlight"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="isDeleted" column="is_deleted"/>
    </resultMap>

    <!-- 구인구직 목록 조회 (검색 포함) -->
    <select id="findJobsWithSearch" parameterType="com.example.carelink.dto.JobDTO" resultMap="jobResultMap">
        SELECT 
            j.*,
            m.name as member_name,
            f.facility_name
        FROM job_posting j
        LEFT JOIN member m ON j.member_id = m.member_id
        LEFT JOIN facility f ON j.facility_id = f.facility_id
        WHERE j.is_deleted = false
        <if test="searchKeyword != null and searchKeyword != ''">
            AND (j.title LIKE CONCAT('%', #{searchKeyword}, '%') 
                 OR j.content LIKE CONCAT('%', #{searchKeyword}, '%')
                 OR j.position LIKE CONCAT('%', #{searchKeyword}, '%'))
        </if>
        <if test="searchJobType != null and searchJobType != ''">
            AND j.job_type = #{searchJobType}
        </if>
        <if test="searchWorkType != null and searchWorkType != ''">
            AND j.work_type = #{searchWorkType}
        </if>
        <if test="searchLocation != null and searchLocation != ''">
            AND j.work_location LIKE CONCAT('%', #{searchLocation}, '%')
        </if>
        <if test="searchPosition != null and searchPosition != ''">
            AND j.position LIKE CONCAT('%', #{searchPosition}, '%')
        </if>
        ORDER BY j.priority DESC, j.created_at DESC
        <if test="size != null and size > 0">
            LIMIT #{size}
        </if>
        <if test="offset != null and offset >= 0">
            OFFSET #{offset}
        </if>
    </select>

    <!-- 구인구직 총 개수 조회 -->
    <select id="countJobsWithSearch" parameterType="com.example.carelink.dto.JobDTO" resultType="int">
        SELECT COUNT(*)
        FROM job_posting j
        WHERE j.is_deleted = false
        <if test="searchKeyword != null and searchKeyword != ''">
            AND (j.title LIKE CONCAT('%', #{searchKeyword}, '%') 
                 OR j.content LIKE CONCAT('%', #{searchKeyword}, '%')
                 OR j.position LIKE CONCAT('%', #{searchKeyword}, '%'))
        </if>
        <if test="searchJobType != null and searchJobType != ''">
            AND j.job_type = #{searchJobType}
        </if>
        <if test="searchWorkType != null and searchWorkType != ''">
            AND j.work_type = #{searchWorkType}
        </if>
        <if test="searchLocation != null and searchLocation != ''">
            AND j.work_location LIKE CONCAT('%', #{searchLocation}, '%')
        </if>
        <if test="searchPosition != null and searchPosition != ''">
            AND j.position LIKE CONCAT('%', #{searchPosition}, '%')
        </if>
    </select>

    <!-- 구인구직 상세 조회 -->
    <select id="findJobById" parameterType="long" resultMap="jobResultMap">
        SELECT 
            j.*,
            m.name as member_name,
            f.facility_name
        FROM job_posting j
        LEFT JOIN member m ON j.member_id = m.member_id
        LEFT JOIN facility f ON j.facility_id = f.facility_id
        WHERE j.job_id = #{jobId} AND j.is_deleted = false
    </select>

    <!-- 구인구직 등록 -->
    <insert id="insertJob" parameterType="com.example.carelink.dto.JobDTO" useGeneratedKeys="true" keyProperty="jobId">
        INSERT INTO job_posting (
            title, content, job_type, work_type, position, recruit_count,
            salary_type, salary_min, salary_max, salary_description,
            work_location, work_hours, experience, education, qualifications, benefits,
            start_date, end_date, contact_name, contact_phone, contact_email,
            status, member_id, facility_id, attachment_path, attachment_name,
            priority, is_highlight, created_at
        ) VALUES (
            #{title}, #{content}, #{jobType}, #{workType}, #{position}, #{recruitCount},
            #{salaryType}, #{salaryMin}, #{salaryMax}, #{salaryDescription},
            #{workLocation}, #{workHours}, #{experience}, #{education}, #{qualifications}, #{benefits},
            #{startDate}, #{endDate}, #{contactName}, #{contactPhone}, #{contactEmail},
            #{status}, #{memberId}, #{facilityId}, #{attachmentPath}, #{attachmentName},
            #{priority}, #{isHighlight}, NOW()
        )
    </insert>

    <!-- 구인구직 수정 -->
    <update id="updateJob" parameterType="com.example.carelink.dto.JobDTO">
        UPDATE job_posting SET
            title = #{title},
            content = #{content},
            job_type = #{jobType},
            work_type = #{workType},
            position = #{position},
            recruit_count = #{recruitCount},
            salary_type = #{salaryType},
            salary_min = #{salaryMin},
            salary_max = #{salaryMax},
            salary_description = #{salaryDescription},
            work_location = #{workLocation},
            work_hours = #{workHours},
            experience = #{experience},
            education = #{education},
            qualifications = #{qualifications},
            benefits = #{benefits},
            start_date = #{startDate},
            end_date = #{endDate},
            contact_name = #{contactName},
            contact_phone = #{contactPhone},
            contact_email = #{contactEmail},
            status = #{status},
            facility_id = #{facilityId},
            attachment_path = #{attachmentPath},
            attachment_name = #{attachmentName},
            priority = #{priority},
            is_highlight = #{isHighlight},
            updated_at = NOW()
        WHERE job_id = #{jobId}
    </update>

    <!-- 구인구직 삭제 (논리 삭제) -->
    <update id="deleteJob" parameterType="long">
        UPDATE job_posting SET
            is_deleted = true,
            updated_at = NOW()
        WHERE job_id = #{jobId}
    </update>

    <!-- 조회수 증가 -->
    <update id="incrementViewCount" parameterType="long">
        UPDATE job_posting SET
            view_count = view_count + 1,
            updated_at = NOW()
        WHERE job_id = #{jobId}
    </update>

    <!-- 지원자 수 증가 -->
    <update id="incrementApplyCount" parameterType="long">
        UPDATE job_posting SET
            apply_count = apply_count + 1,
            updated_at = NOW()
        WHERE job_id = #{jobId}
    </update>

    <!-- 회원별 구인구직 목록 조회 -->
    <select id="findJobsByMemberId" parameterType="long" resultMap="jobResultMap">
        SELECT 
            j.*,
            m.name as member_name,
            f.facility_name
        FROM job_posting j
        LEFT JOIN member m ON j.member_id = m.member_id
        LEFT JOIN facility f ON j.facility_id = f.facility_id
        WHERE j.member_id = #{memberId} AND j.is_deleted = false
        ORDER BY j.created_at DESC
    </select>

    <!-- 시설별 구인구직 목록 조회 -->
    <select id="findJobsByFacilityId" parameterType="long" resultMap="jobResultMap">
        SELECT 
            j.*,
            m.name as member_name,
            f.facility_name
        FROM job_posting j
        LEFT JOIN member m ON j.member_id = m.member_id
        LEFT JOIN facility f ON j.facility_id = f.facility_id
        WHERE j.facility_id = #{facilityId} AND j.is_deleted = false
        ORDER BY j.created_at DESC
    </select>

    <!-- 기본 구인구직 목록 조회 (기존 호환성 유지) -->
    <select id="getJobList" parameterType="com.example.carelink.dto.JobDTO" resultMap="jobResultMap">
        SELECT 
            j.*,
            m.name as member_name,
            f.facility_name
        FROM job_posting j
        LEFT JOIN member m ON j.member_id = m.member_id
        LEFT JOIN facility f ON j.facility_id = f.facility_id
        WHERE j.is_deleted = false
        ORDER BY j.priority DESC, j.created_at DESC
        <if test="size != null and size > 0">
            LIMIT #{size}
        </if>
        <if test="page != null and page >= 0">
            OFFSET #{page}
        </if>
    </select>

    <!-- 구인구직 상세 조회 (기존 호환성 유지) -->
    <select id="getJobById" parameterType="long" resultMap="jobResultMap">
        SELECT 
            j.*,
            m.name as member_name,
            f.facility_name
        FROM job_posting j
        LEFT JOIN member m ON j.member_id = m.member_id
        LEFT JOIN facility f ON j.facility_id = f.facility_id
        WHERE j.job_id = #{jobId} AND j.is_deleted = false
    </select>

    <!-- 인기 구인구직 목록 조회 -->
    <select id="getPopularJobs" resultMap="jobResultMap">
        SELECT 
            j.*,
            m.name as member_name,
            f.facility_name
        FROM job_posting j
        LEFT JOIN member m ON j.member_id = m.member_id
        LEFT JOIN facility f ON j.facility_id = f.facility_id
        WHERE j.is_deleted = false AND j.status = 'ACTIVE'
        ORDER BY j.view_count DESC, j.apply_count DESC
        LIMIT 10
    </select>

    <!-- 전체 구인구직 수 조회 (통계용) -->
    <select id="getJobCount" resultType="int">
        SELECT COUNT(*) 
        FROM job_posting 
        WHERE is_deleted = false AND status = 'ACTIVE'
    </select>

</mapper> 
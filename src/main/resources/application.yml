# 서버 설정
server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

# 데이터베이스 설정
spring:
  jackson:
    serialization:
      write-dates-as-timestamps: false
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL:jdbc:mysql://localhost:3306/carelink?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8}
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:mysql}
    hikari:
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      maximum-pool-size: 10
      minimum-idle: 5
      pool-name: CareLink-HikariCP
      auto-commit: false
      transaction-isolation: TRANSACTION_READ_COMMITTED

  # Thymeleaf 설정
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
    cache: false  # 개발 단계에서는 캐시 비활성화
    
  # 파일 업로드 설정
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

# MyBatis 설정
mybatis:
  type-aliases-package: com.example.carelink.dto
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
    jdbc-type-for-null: varchar
    default-fetch-size: 100
    default-statement-timeout: 30

# 로깅 설정
logging:
  level:
    root: INFO # 기본 루트 로그 레벨 (필요시 DEBUG로 변경)
    com.example.carelink: DEBUG # 본인의 애플리케이션 패키지 로그 레벨을 DEBUG로 높입니다.
    com.example.carelink.dao: DEBUG
    org.springframework.web: DEBUG # 웹 관련 로그를 자세히 봅니다.
    org.springframework.jdbc: DEBUG
    org.mybatis: DEBUG # MyBatis 관련 로그를 자세히 봅니다.
    org.apache.ibatis: DEBUG
    org.springframework.transaction: DEBUG
    java.sql: DEBUG # SQL 쿼리를 직접적으로 봅니다. (MyBatis가 SQL을 콘솔에 출력하도록 설정했다면)
    jdbc.sqltiming: INFO # 실제 쿼리 실행 시간 등을 보려면 INFO (혹은 DEBUG)
    com.zaxxer.hikari: DEBUG # DB 커넥션 풀 관련

# 파일 업로드 경로 설정 (로컬 디렉토리 - 프로젝트와 분리)
file:
  upload-dir:
    facility: C:/carelink-uploads/facility/
    profile: C:/carelink-uploads/profile/
    temp: C:/carelink-uploads/temp/

# SpringDoc OpenAPI 설정
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: method
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  paths-to-match:
    - /api/**
  packages-to-scan:
    - com.lightcare.controller
